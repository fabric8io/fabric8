<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2014 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
    	<groupId>io.fabric8.itests.paxexam</groupId>
        <artifactId>fabric-itests-paxexam</artifactId>
        <version>1.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>fabric-itests-paxexam-basic</artifactId>
    <name>Fabric8 :: Integration Tests :: PaxExam (Deprecated) :: Basic</name>

    <dependencies>

        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-karaf</artifactId>
            <version>${project.version}</version>
            <type>zip</type>
        </dependency>
        <dependency>
			<groupId>io.fabric8.itests.paxexam</groupId>
            <artifactId>fabric-itests-paxexam-common</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Internal Dependencies -->
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric-core-agent-ssh</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric-core-agent-jclouds</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric-utils</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric-git</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric-git-server</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Jclouds Dependencies -->
        <dependency>
            <groupId>org.apache.jclouds</groupId>
            <artifactId>jclouds-compute</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.jclouds.provider</groupId>
            <artifactId>aws-ec2</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Http Client -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore-osgi</artifactId>
            <version>4.1.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient-osgi</artifactId>
            <version>4.1.2</version>
            <scope>test</scope>
        </dependency>


        <!-- Fabric Dependencies  -->
        <dependency>
          <groupId>io.fabric8</groupId>
          <artifactId>fabric-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric-core</artifactId>
        </dependency>

        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric-zookeeper</artifactId>
            <!-- Excluding this as it can cause issues with multiple versions of commons-logging -->
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.fabric8.examples</groupId>
            <artifactId>fabric-activemq-demo</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.fabric8.examples</groupId>
            <artifactId>fabric-cxf-demo-client</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-bundle</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8.examples.fabric-camel-dosgi</groupId>
            <artifactId>features</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric-git-hawtio</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric-redirect</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>io.fabric8.mq</groupId>
            <artifactId>mq-http-discovery</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.fabric8.mq</groupId>
            <artifactId>camel-amq</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.fabric8.insight</groupId>
            <artifactId>insight-camel</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.fabric8.insight</groupId>
            <artifactId>insight-elasticsearch</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.fabric8.insight</groupId>
            <artifactId>insight-storage</artifactId>
            <scope>test</scope>
        </dependency>
        
        <!-- Testing Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- required for the ArchetypeTest -->
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>archetype-builder</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**</include>
                </includes>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin-version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-depends-file</id>
                        <goals>
                            <goal>generate-depends-file</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkMode>pertest</forkMode>
                    <useSystemClassLoader>true</useSystemClassLoader>
                    <useManifestOnlyJar>false</useManifestOnlyJar>
                    <failIfNoTests>false</failIfNoTests>
                    <includes>
                        <include>**/*Test.*</include>
                    </includes>
                    <excludes>
                        <exclude>**/*LongTest.*</exclude>
                        <exclude>**/FabricAwsAgentTest.*</exclude>
                        <exclude>**/FabricRackspaceAgentTest.*</exclude>
                        <!--
                        TODO enable when we can get it working again ;)
                        -->
                        <exclude>**/ArchetypeTest.*</exclude>
                        <exclude>**/ExtendedJoinTest.*</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <feature>${feature}</feature>
                        <perfectus-build>${perfectus-build}</perfectus-build>
                        <fabric.version>${project.version}</fabric.version>
                        <project-version>${project.version}</project-version>
                        <fabricitest.rackspace.identity>${fabricitest.rackspace.identity}
                        </fabricitest.rackspace.identity>
                        <fabricitest.rackspace.credential>${fabricitest.rackspace.credential}
                        </fabricitest.rackspace.credential>
                        <fabricitest.rackspace.image>${fabricitest.rackspace.image}</fabricitest.rackspace.image>
                        <fabricitest.rackspace.location>${fabricitest.rackspace.location}
                        </fabricitest.rackspace.location>
                        <fabricitest.rackspace.user>${fabricitest.rackspace.user}</fabricitest.rackspace.user>

                        <fabricitest.aws.identity>${fabricitest.aws.identity}</fabricitest.aws.identity>
                        <fabricitest.aws.credential>${fabricitest.aws.credential}</fabricitest.aws.credential>
                        <fabricitest.aws.image>${fabricitest.aws.image}</fabricitest.aws.image>
                        <fabricitest.aws.location>${fabricitest.aws.location}</fabricitest.aws.location>
                        <fabricitest.aws.user>${fabricitest.aws.user}</fabricitest.aws.user>

                        <fabricitest.ssh.username>${fabricitest.ssh.username}</fabricitest.ssh.username>
                        <fabricitest.ssh.password>${fabricitest.ssh.password}</fabricitest.ssh.password>
                        <fabricitest.ssh.host>${fabricitest.ssh.host}</fabricitest.ssh.host>
                        <fabricitest.ssh.port>${fabricitest.ssh.port}</fabricitest.ssh.port>
                        <fabricitest.version>${project.version}</fabricitest.version>
                    </systemPropertyVariables>
                    <classpathDependencyExcludes>
                        <classpathDependencyExclude>org.slf4j:slf4j-log4j12</classpathDependencyExclude>
                    </classpathDependencyExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


    <profiles>
        <!-- modifies the plugin config inherited from oss-parent -->
        <profile>
            <id>long</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <forkMode>pertest</forkMode>
                            <useSystemClassLoader>true</useSystemClassLoader>
                            <useManifestOnlyJar>false</useManifestOnlyJar>
                            <failIfNoTests>false</failIfNoTests>
                            <includes>
                                <include>**/*LongTest.*</include>
                            </includes>
                            <systemPropertyVariables>
                                <feature>${feature}</feature>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
