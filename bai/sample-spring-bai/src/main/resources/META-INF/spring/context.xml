<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- lets configure the audit notifier to the audit endpoint, vm:audit -->
    <!-- Let's remove this, as it'll be injected by the BAI Agent -->
	<!-- <bean class="org.fusesource.bai.AuditEventNotifier">
		<property name="endpointUri" value="vm:audit?waitForTaskToComplete=Never" />
	</bean> -->

    <!-- Camel route to be audited -->
	<camelContext id="context1" useBreadcrumb="true"  xmlns="http://camel.apache.org/schema/spring">
		
        <route id="route1" startupOrder="5">
        	<from uri="timer://foo?fixedRate=true&amp;period=300000" id="timerEndpoint" />
        	<setBody><constant><![CDATA[<test>Hello</test>]]></constant></setBody>
        	<camel:log message="At route route1" />
        	<to uri="seda:otherRoute" id="anotherRoute" />
        </route>
        
        <route id="failureRoute" startupOrder="6">
       		<from uri="jetty:http://localhost:49999/fail?matchOnUriPrefix=true" id="httpServerFail" />
       		<onException>
	        	<exception>java.lang.Exception</exception>
	        	<redeliveryPolicy maximumRedeliveries="3" redeliveryDelay="1000" logRetryAttempted="true" logExhausted="true"/>
        	</onException>
        	<setBody><constant>fail</constant></setBody>
        	<camel:log message="At route failureRoute" />
        	<setProperty propertyName="fail"><constant>true</constant></setProperty>
        	<to uri="seda:otherRoute" id="anotherRouteFail" />
        </route>
        
        <route id="route2" startupOrder="4" errorHandlerRef="noErrorHandler">
        	<from uri="seda:otherRoute" id="theOtherRoute" />
        	<camel:log message="At route route2" />
        	<to uri="file:outbox?fileExist=Append&amp;fileName=test.txt" id="fileEndpoint" />
        	<to uri="http://localhost:43234/test?bridgeEndpoint=true" id="httpEndpoint" />
        	<filter>
        		<simple>${property.fail} == 'true'</simple>
        		<throwException ref="exception" />
        	</filter>
        </route>
        
        <route id="route3" startupOrder="3">
        	<from uri="jetty:http://localhost:43234/test?matchOnUriPrefix=true" id="httpServer" />
        	<camel:log message="At route route3" />
        	<setBody><constant><![CDATA[{ "hello": "world" }]]></constant></setBody>
        	<setHeader headerName="destinations">
                <constant>activemq:test.one,activemq:test.two,activemq:test.three</constant>
            </setHeader>
        	<to uri="direct:notifyResult" />
        </route>
        
        <route id="route4" startupOrder="2">
        	<from uri="direct:notifyResult" id="notifyResults" />
        	<camel:log message="At route route4" />
        	<to uri="log:test?showAll=true" />
        	<camel:recipientList id="rlNode">
        		<camel:tokenize token="," headerName="destinations" regex="false" />
        	</camel:recipientList>
        </route>
        
        <route id="route5" startupOrder="1">
        	<from uri="activemq:&gt;" />
        	<camel:log message="At route route5" />
        	<to uri="log:ReceivedJMS" />
        	<setBody><constant><![CDATA[{ "result": "OK", "replier": "route5" }]]></constant></setBody>
        </route>
        
    </camelContext>    


    <!-- lets stub out the activemq endpoint -->
    <bean id="activemq" class="org.apache.camel.component.file.FileComponent">
    </bean>

<!--
   	<bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
   	   <property name="brokerURL" value="vm://default" />
   	</bean>

   	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
   	   <property name="connectionFactory" ref="amqConnectionFactory"/>
   	   <property name="transacted" value="false"/>
   	   <property name="concurrentConsumers" value="1"/>
   	</bean>

   	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
   	    <property name="configuration" ref="jmsConfig"/>
   	</bean>
-->




    <bean class="java.lang.Exception" id="exception">
   		<constructor-arg index="0" value="Hello, I'm an exception" />
   	</bean>

   	<bean id="noErrorHandler" class="org.apache.camel.builder.NoErrorHandlerBuilder"/>

   	<!-- ActiveMQ through which all exchange events will be pushed -->
   	<!-- <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
   		<property name="configuration">
   			<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
   			   <property name="connectionFactory">
   			   	<bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
   			   		?jms.copyMessageOnSend=false&amp;jms.objectMessageSerializationDefered=false&amp;jms.useAsyncSend=true
   				   <property name="brokerURL" value="vm://default" />
   				</bean>
   			   </property>
   			   <property name="transacted" value="false"/>
   			   <property name="deliveryPersistent" value="false" />
   			</bean>
   		</property>
       </bean>  -->
</beans>
