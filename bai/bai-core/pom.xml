<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!--
  ~ Copyright (C) FuseSource, Inc.
  ~ http://fusesource.com
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.fusesource.bai</groupId>
    <artifactId>bai</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>bai-core</artifactId>
  <packaging>bundle</packaging>

  <name>[TODO]${project.artifactId}</name>
  <description>FuseSource :: Business Activity Insight :: Core</description>

  <properties>
    <fuse.osgi.export>
      org.fusesource.bai*;version=${project.version}
    </fuse.osgi.export>
        <fuse.osgi.import.additional>
          com.sun.xml.bind*;resolution:=optional,
    </fuse.osgi.import.additional>

    <bai.schema.version>${project.version}</bai.schema.version>
    <jaxb-2-version>2.2.5</jaxb-2-version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring</artifactId>
      <version>${camel-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
      <version>${camel-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring</artifactId>
      <version>${camel-version}</version>
      <type>xsd</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>common-util</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>${jaxb-2-version}</version>
      <optional>true</optional>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>install</defaultGoal>
    <resources>
      <resource>
        <directory>target/schema</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>${jaxb-version}</version>
          </dependency>
          <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-xjc</artifactId>
            <version>${jaxb-version}</version>
          </dependency>
        </dependencies>

        <executions>
          <!--
                        <execution>
                          <id>package</id>
                          <phase>package</phase>
                          <configuration>
                            <target>
                              <echo>Including source code from camel-core-xml in the camel-spring-sources.jar</echo>
                              <jar destfile="${project.build.directory}/${project.artifactId}-${project.version}-sources.jar" update="true">
                                <fileset dir="${basedir}/../camel-core-osgi/src/main/java" includes="**/*" />
                                <fileset dir="${basedir}/../camel-core-xml/src/main/java" includes="**/*" />
                              </jar>
                            </target>
                          </configuration>
                          <goals>
                            <goal>run</goal>
                          </goals>
                        </execution>
          -->
          <execution>
            <id>compile-test</id>
            <phase>test-compile</phase>
            <configuration>
              <target>
                <taskdef name="schemagen" classname="com.sun.tools.jxc.SchemaGenTask"
                         classpathref="maven.plugin.classpath"/>

                <echo>Copying code together for the XSD generation</echo>
                <mkdir dir="${project.build.directory}/schema-src"/>
                <copy todir="${project.build.directory}/schema-src">
                  <fileset dir="${basedir}/src/main/java">
                    <include name="org/fusesource/bai/config/*.java"/>
                  </fileset>
                </copy>


                <!--
                                    <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
                                    <property name="ant.regexp.regexpimpl" value="org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp" />
                                    <property name="mv" value="${project.version}" />
                                    <propertyregex property="ov.p1" input="${mv}" regexp="(\d+)(?:\.(\d+)(?:\.(\d+))?)?(?:[^a-zA-Z0-9](.*))?" replace="\1" defaultValue="0" />
                                    <propertyregex property="ov.p2" input="${mv}" regexp="(\d+)(?:\.(\d+)(?:\.(\d+))?)?(?:[^a-zA-Z0-9](.*))?" replace=".\2" defaultValue=".0" />
                                    <propertyregex property="ov.p1a" input="${ov.p1}" regexp="(.+)" replace="\1" defaultValue="0" />
                                    <propertyregex property="ov.p2a" input="${ov.p2}" regexp="(\..+)" replace="\1" defaultValue=".0" />
                                    <property name="bai.schema.version" value="${ov.p1a}${ov.p2a}" />
                                    <mkdir dir="target" />
                                    <echo file="target/camel.osgi.version.txt">
                                          bai.schema.version = ${bai.schema.version}
                                    </echo>
                -->

                <echo>Generating XSD schema</echo>
                <mkdir dir="${project.build.directory}/schema"/>
                <schemagen srcdir="${project.build.directory}/schema-src" destdir="${project.build.directory}/schema"
                        >
                  <schema namespace="http://fuse.fusesource.org/schema/bai" file="bai.xsd"/>
                  <schema namespace="http://camel.apache.org/schema/spring"/>
                  <classpath refid="maven.compile.classpath"/>
                </schemagen>
                <copy file="${project.build.directory}/schema/bai.xsd"
                      tofile="${project.build.directory}/schema/bai-v${bai.schema.version}.xsd"/>

                <copy file="${user.home}/.m2/repository/org/apache/camel/camel-spring/${camel-version}/camel-spring-${camel-version}.xsd"
                      tofile="${project.build.directory}/schema/camel-spring.xsd" failonerror="false"/>

                <!-- or use a system property to find the local mvn repo -->
                <copy file="${maven.repo.local}/org/apache/camel/camel-spring/${camel-version}/camel-spring-${camel-version}.xsd"
                      tofile="${project.build.directory}/schema/camel-spring.xsd" failonerror="false"/>

                <!--
                                    <replace file="${project.build.directory}/schema/bai-v${bai.schema.version}.xsd" token="http://fuse.fusesource.org/schema/bai" value="http://fuse.fusesource.org/schema/bai/v${bai.schema.version}" />

                -->
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- add the sources from camel-core-osgi and camel-core-xml as source code in the camel-spring-sources.jar -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/schema/bai.xsd</file>
                  <type>xsd</type>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>add-tools-jar-if-exists</id>
      <activation>
        <file>
          <exists>${java.home}/../lib/tools.jar</exists>
        </file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <version>1.6</version>
              <dependencies>
                <dependency>
                  <groupId>com.sun.xml.bind</groupId>
                  <artifactId>jaxb-impl</artifactId>
                  <version>${jaxb-version}</version>
                </dependency>
                <dependency>
                  <groupId>com.sun.xml.bind</groupId>
                  <artifactId>jaxb-xjc</artifactId>
                  <version>${jaxb-version}</version>
                </dependency>
                <dependency>
                  <groupId>com.sun</groupId>
                  <artifactId>tools</artifactId>
                  <version>1.5.0</version>
                  <scope>system</scope>
                  <systemPath>${java.home}/../lib/tools.jar</systemPath>
                </dependency>
              </dependencies>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>

</project>
