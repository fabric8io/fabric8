<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2014 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
      <groupId>io.fabric8</groupId>
      <artifactId>fabric8-project</artifactId>
      <version>1.1.0-SNAPSHOT</version>
      <relativePath>../parent</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>io.fabric8.site</groupId>
  <artifactId>fabric8-site</artifactId>
  <packaging>war</packaging>
  <name>Fabric8 :: Web Site</name>

  <properties>
    <webapp-dir>${project.artifactId}-${project.version}</webapp-dir>
    <webapp-outdir>${basedir}/target/${webapp-dir}</webapp-outdir>

    <scalate-version>1.5.3</scalate-version>
    <jettyPort>8000</jettyPort>
  </properties>

  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api-version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>io.fabric8.site</groupId>
      <artifactId>fabric8-site-base</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>

  </dependencies>

  <distributionManagement>
    <!--
    To deploy this add this to your ~/.m2/settings.xml

   <server>
       <id>github-project-site</id>
       <username>git</username>
   </server>
    -->

    <site>
      <id>github-project-site</id>
      <url>gitsite:git@github.com/fabric8io/fabric8.git</url>
    </site>
  </distributionManagement>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <configuration>
              <target>

                <!-- copy the markdown docs into the site plugin  -->
                <copy todir="${webapp-outdir}/app/site" overwrite="true">
                  <fileset dir="${basedir}/..">
                    <include name="*.md" />
                  </fileset>
                </copy>
                <copy todir="${webapp-outdir}/app/site/doc" overwrite="true">
                  <fileset dir="${basedir}/../docs">
                    <include name="**/*.md" />
                    <include name="**/*.html" />
                    <include name="images/*.*" />
                  </fileset>
                </copy>

                <!-- lets generate the gitbook -->
                <mkdir dir="${webapp-outdir}/gitbook"/>
                <echo>executing gitbook</echo>
                <exec executable="gitbook">
                  <arg value="build"/>
                  <arg value="${basedir}/../docs"/>
                  <arg value="--output=${webapp-outdir}/gitbook"/>
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>7.6.9.v20130131</version>
        <configuration>
          <webAppConfig>
<!--
            <contextPath>${context}</contextPath>
-->
            <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
              <resourcesAsCSV>src/main/webapp,${webapp-outdir}</resourcesAsCSV>
            </baseResource>
          </webAppConfig>
          <connectors>
            <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
              <port>${jettyPort}</port>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>

          <systemProperties>
<!--
            <systemProperty>
              <key>hawtio.config.dir</key>
              <value>${hawtio-config-dir}</value>
            </systemProperty>
            <systemProperty>
              <key>hawtio.config.repo</key>
              <value>${hawtio-config-repo}</value>
            </systemProperty>
-->
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <port>9090</port>
          <path>${context}</path>
          <systemProperties>
          </systemProperties>
          <useTestClasspath>false</useTestClasspath>
          <!--
                    <warSourceDirectory>${project.build.directory}/${project.name}-${project.version}</warSourceDirectory>
          -->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat6-maven-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <port>9090</port>
          <path>${context}</path>
          <systemProperties>
          </systemProperties>
          <useTestClasspath>false</useTestClasspath>
          <!--
                    <warSourceDirectory>${project.build.directory}/${project.name}-${project.version}</warSourceDirectory>
          -->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <outputFileNameMapping>@{artifactId}@-@{baseVersion}@@{dashClassifier?}@.@{extension}@</outputFileNameMapping>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/overlays</directory>
              <includes>
                <include>**/*.*</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.fusesource.scalate</groupId>
        <artifactId>maven-scalate-plugin</artifactId>
<!--
        <artifactId>maven-scalate-plugin_2.10</artifactId>
-->
        <version>${scalate-version}</version>
        <configuration>
          <targetDirectory>${webapp-outdir}</targetDirectory>
          <inputDirectory>${webapp-outdir}</inputDirectory>
          <remoteServerId>github-project-site</remoteServerId>
          <remoteServerUrl>gitsite:git@github.com/fabric8io/fabric8.git</remoteServerUrl>
        </configuration>
        <executions>
          <execution>
            <id>deploy</id>
            <goals>
              <goal>deploy</goal>
            </goals>
            <phase>deploy</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin-version}</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>net.alchim31</groupId>
            <artifactId>livereload-jvm</artifactId>
            <version>0.2.0</version>
            <type>jar</type>
          </dependency>
        </dependencies>
        <configuration>
          <includeProjectDependencies>false</includeProjectDependencies>
          <includePluginDependencies>true</includePluginDependencies>
          <executableDependency>
            <groupId>net.alchim31</groupId>
            <artifactId>livereload-jvm</artifactId>
          </executableDependency>
          <mainClass>net_alchim31_livereload.Main</mainClass>
          <classpathScope>test</classpathScope>
          <arguments>
            <argument>-d</argument>
            <argument>${basedir}/src/main/webapp</argument>
          </arguments>
          <systemProperties>
          </systemProperties>
        </configuration>
      </plugin>


    </plugins>

    <extensions>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-provider-gitexe</artifactId>
        <version>1.6</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-manager-plexus</artifactId>
        <version>1.6</version>
      </extension>
      <extension>
        <groupId>com.github.stephenc.wagon</groupId>
        <artifactId>wagon-gitsite</artifactId>
        <version>0.4.1</version>
      </extension>
    </extensions>
  </build>
</project>
