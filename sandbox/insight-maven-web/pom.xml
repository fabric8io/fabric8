<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
      <groupId>org.fusesource.insight</groupId>
      <artifactId>insight-project</artifactId>
      <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>insight-maven-web</artifactId>
  <packaging>war</packaging>

  <name>[TODO]${project.artifactId}</name>
  <description>Insight Maven Web</description>

  <prerequisites>
    <maven>2.0.9</maven>
  </prerequisites>

  <properties>
    <!-- environment settings -->
    <jetty-port>8080</jetty-port>
    <scalate.editor>${env.SCALATE_EDITOR}</scalate.editor>
    <scalate.workdir>${basedir}/target/_scalate</scalate.workdir>
    <scalate.package.resources>org.fusesource.camel.insight.resources</scalate.package.resources>
    <scalate.generate.src>${basedir}/src</scalate.generate.src>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.fusesource.insight</groupId>
      <artifactId>insight-maven</artifactId>
      <version>${fabric.version}</version>
    </dependency>
    <dependency>
      <groupId>org.fusesource.scalate</groupId>
      <artifactId>scalate-page</artifactId>
      <version>${scalate-version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey-version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-spring</artifactId>
      <version>${jersey-version}</version>
      <!-- replace the spring versions from the jersey dependency to avoid odd versions like 3.0.0.RC3 sneaking in -->
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aop</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- replace the spring versions from the jersey dependency to avoid odd versions like 3.0.0.RC3 sneaking in -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring-version}</version>
    </dependency>


    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api-version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-version}</version>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>org.fusesource.scalate</groupId>
      <artifactId>scalate-test</artifactId>
      <version>${scalate-version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <jvmArgs>
            <jvmArg>-Xmx1024m</jvmArg>
          </jvmArgs>
          <args>
            <!-- arg>-unchecked</arg -->
            <arg>-deprecation</arg>
          </args>
          <scalaVersion>${scala-version}</scalaVersion>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <scalate.package.resources>${scalate.package.resources}</scalate.package.resources>
            <scalate.generate.src>${scalate.generate.src}</scalate.generate.src>
          </systemPropertyVariables>

          <forkMode>once</forkMode>
          <!-- these settings are mandatory to avoid SureFire giving a bogus system property to the web container -->
          <useSystemClassLoader>false</useSystemClassLoader>
          <useManifestOnlyJar>false</useManifestOnlyJar>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <attachClasses>true</attachClasses>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/src/main/webapp/WEB-INF/_scalate</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty-plugin-version}</version>
        <configuration>
          <useTestClasspath>true</useTestClasspath>
          <port>${jetty.port}</port>
          <!--
          <connectors>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>${jetty.port}</port>
              <maxIdleTime>60000</maxIdleTime>
            </connector>
          </connectors>
          -->

          <webAppConfig>
            <contextPath>/insight</contextPath>
            <unpackOverlays>true</unpackOverlays>
          </webAppConfig>

          <systemProperties>
            <!-- enable easy JMX connection to JConsole -->
            <systemProperty>
              <name>com.sun.management.jmxremote</name>
              <value/>
            </systemProperty>
            <systemProperty>
              <name>jetty.port</name>
              <value>${jetty-port}</value>
            </systemProperty>
            <systemProperty>
              <name>scalate.mode</name>
              <value>${scalate.mode}</value>
            </systemProperty>
            <systemProperty>
              <name>scalate.editor</name>
              <value>${scalate.editor}</value>
            </systemProperty>
            <systemProperty>
              <name>scalate.workdir</name>
              <value>${scalate.workdir}</value>
            </systemProperty>
            <systemProperty>
              <name>scalate.package.resources</name>
              <value>${scalate.package.resources}</value>
            </systemProperty>
          </systemProperties>
          <scanIntervalSeconds>1</scanIntervalSeconds>
        </configuration>
      </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.2.1</version>
          <executions>
            <execution>
              <goals>
                <goal>java</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <mainClass>org.fusesource.insight.maven.archetypes.UpdateReleases</mainClass>
            <classpathScope>test</classpathScope>
            <cleanupDaemonThreads>false</cleanupDaemonThreads>
<!--
            <arguments>
              <argument></argument>
            </arguments>
-->
  <!--
            <systemProperties>
              <systemProperty>
                <key>basedir</key>
                <value>${basedir}</value>
              </systemProperty>
            </systemProperties>
  -->
          </configuration>
        </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>jrebel</id>
      <dependencies>
        <dependency>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-jrebel</artifactId>
          <version>${jersey-version}</version>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>com.sun.jersey</groupId>
              <artifactId>jersey-core</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
