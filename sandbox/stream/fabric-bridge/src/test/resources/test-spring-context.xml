<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) FuseSource, Inc.
  http://fusesource.com

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bridge="http://fusesource.org/fabric/bridge"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://fusesource.org/fabric/bridge http://fusesource.org/fabric/bridge/fabric-bridge.xsd">

  <!-- Model Beans -->
  <bridge:dispatch-policy id="mypolicy" cacheLevel="3"
                          concurrentConsumers="1" maxConcurrentConsumers="1" batchSize="10"
                          batchTimeout="5000" localAcknowledgeMode="1" localSessionTransacted="true"
                          messageSelector="field = value" remoteAcknowledgeMode="1"
                          remoteSessionTransacted="true" messageConverterRef="converter"/>

  <bean name="converter"
        class="io.fabric8.bridge.spring.TestMessageConverter"/>

  <bridge:destination id="mydestinationwithref" name="testDestination"
                      pubSubDomain="true" subscriptionDurable="true" targetName="testDestinationTarget"
                      durableSubscriptionName="testDurableSubscriptionName"
                      dispatchPolicyRef="mypolicy"/>

  <bridge:destination id="mydestinationwithnested" name="testDestination"
                      pubSubDomain="true" subscriptionDurable="true" targetName="testDestinationTarget"
                      durableSubscriptionName="testDurableSubscriptionName">
    <bridge:dispatch-policy batchTimeout="5000"/>
  </bridge:destination>

  <bridge:destinations-config id="mydestinationsconfig"
                              defaultStagingLocation="false" destinationNameHeader="myNameHeader"
                              destinationTypeHeader="myTypeHeader" stagingQueueName="myQueueName">
    <bridge:dispatch-policy batchTimeout="5000"/>
    <bridge:destination name="mydestination1"/>
    <bridge:destination name="mydestination2"/>
  </bridge:destinations-config>

  <bridge:destinations-config id="mydestinationsconfigwithnostaging"
                              useStagingQueue="false">
    <bridge:destination name="mydestination1"/>
    <bridge:destination name="mydestination2"/>
  </bridge:destinations-config>

  <bean id="myconnectionfactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory"/>

  <bean id="mydestinationresolver" class="org.springframework.jms.support.destination.BeanFactoryDestinationResolver"/>

  <bridge:broker-config id="mybrokerconfig"
                        brokerUrl="tcp://localhost:61616" clientId="testId"
                        connectionFactoryRef="myconnectionfactory" destinationResolverRef="mydestinationresolver"
                        maxConnections="5" userName="myusername" password="mypassword"/>

  <bridge:remote-bridge id="myremotebridgewithref" remoteBrokerRef="mybrokerconfig"
                        outboundDestinationsRef="mydestinationsconfig"/>

  <bridge:remote-bridge id="myremotebridgewithnested">
    <bridge:remote-broker brokerUrl="tcp://localhost:61616"/>
    <bridge:outbound-destinations defaultStagingLocation="false"/>
  </bridge:remote-bridge>

  <bridge:destinations-config id="upstream">
    <bridge:destination name="mydestination1"/>
    <bridge:destination name="mydestination2"/>
    <bridge:destination name="mydestination3"/>
  </bridge:destinations-config>

  <bridge:destinations-config id="downstream">
    <bridge:destination name="mydestination1.down"/>
    <bridge:destination name="mydestination2.down"/>
    <bridge:destination name="mydestination3.down"/>
  </bridge:destinations-config>



  <!-- Connector Beans -->

  <!-- Spring bridge connector -->
  <bridge:bridge-connector id="mybridgeconnector">
    <bridge:local-broker
        brokerUrl="vm://local?broker.persistent=false&amp;broker.brokerName=local&amp;jms.prefetchPolicy.queuePrefetch=10"/>
    <bridge:remote-broker
        brokerUrl="vm://remote?broker.persistent=false&amp;broker.brokerName=remote&amp;jms.prefetchPolicy.queuePrefetch=10"/>
    <bridge:outbound-destinations>
      <bridge:destination name="mydestination1"/>
    </bridge:outbound-destinations>
    <bridge:inbound-destinations/>
  </bridge:bridge-connector>


  <!-- Spring bridge connector with references to destinations -->
  <bridge:bridge-connector id="mybridgeconnectorwithrefs" inboundDestinationsRef="downstream"
                           outboundDestinationsRef="upstream">
    <bridge:local-broker
        brokerUrl="vm://local?broker.persistent=false&amp;broker.brokerName=local&amp;jms.prefetchPolicy.queuePrefetch=10"/>
    <bridge:remote-broker
        brokerUrl="vm://remote?broker.persistent=false&amp;broker.brokerName=remote&amp;jms.prefetchPolicy.queuePrefetch=10"/>
  </bridge:bridge-connector>


  <!-- Spring gateway connector -->
  <bridge:gateway-connector id="mygatewayconnector">
    <bridge:local-broker
        brokerUrl="vm://remote?broker.persistent=false&amp;broker.brokerName=remote&amp;jms.prefetchPolicy.queuePrefetch=10"/>
    <bridge:inbound-destinations/>
    <bridge:outbound-destinations>
      <bridge:destination name="mydestination2"/>
    </bridge:outbound-destinations>
    <bridge:remote-bridge>
      <bridge:remote-broker
          brokerUrl="vm://local?broker.persistent=false&amp;broker.brokerName=local&amp;jms.prefetchPolicy.queuePrefetch=10"/>
    </bridge:remote-bridge>
    <bridge:remote-bridge>
      <bridge:remote-broker
          brokerUrl="vm://local2?broker.persistent=false&amp;broker.brokerName=local2&amp;jms.prefetchPolicy.queuePrefetch=10"/>
    </bridge:remote-bridge>
  </bridge:gateway-connector>


  <!-- Spring gateway connector with references to destinations -->
  <bridge:gateway-connector id="mygatewayconnectorwithrefs" inboundDestinationsRef="upstream"
                            outboundDestinationsRef="downstream">
    <bridge:local-broker
        brokerUrl="vm://remote?broker.persistent=false&amp;broker.brokerName=remote&amp;jms.prefetchPolicy.queuePrefetch=10"/>
    <bridge:remote-bridge>
      <bridge:remote-broker
          brokerUrl="vm://local?broker.persistent=false&amp;broker.brokerName=local&amp;jms.prefetchPolicy.queuePrefetch=10"/>
    </bridge:remote-bridge>
  </bridge:gateway-connector>


</beans>
