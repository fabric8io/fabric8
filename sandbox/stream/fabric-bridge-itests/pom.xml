<!--
  Copyright (C) FuseSource, Inc.
  http://fusesource.com

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.fabric8.bridge</groupId>
    <artifactId>fabric-bridge-project</artifactId>
    <version>1.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>fabric-bridge-itests</artifactId>
  <packaging>jar</packaging>

  <name>Fuse Stream :: Integration Tests</name>

  <dependencies>

    <!--
        The SLF4j logging bundles are required for the PAX Exam logging.
        This instance is what reads the log4j.properties file and renders
        anything called for the test instance and the configuration.
     -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j-version}</version>
      <scope>test</scope>
    </dependency>

    <!-- This is required to be first so that pax-exam classloader is not messed up with a newer version of felix
which would lead to java.lang.NoSuchMethodError: org.apache.felix.framework.Logger.<init>(I)V -->
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.framework</artifactId>
      <version>1.0.0</version>
    </dependency>
    <!-- This is required to be first so that pax-exam classloader is not messed up with a newer version of felix
which would lead to java.lang.RuntimeException: Could not create [service.obr] -->
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.bundlerepository</artifactId>
      <version>1.2.1</version>
    </dependency>
    <!--
        Eliminated all other classes that introduce SLF4j libraries.  These
        transitive dependencies are picked up by the SLF4j instance that
        is created when running the unit test PAX Exam causing multiple
        instance warnings and a lack of control (depending on which library
        is used first).
     -->
    <dependency>
      <groupId>org.apache.karaf.tooling</groupId>
      <artifactId>org.apache.karaf.tooling.testing</artifactId>
      <version>${karaf-version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.ops4j.pax.logging</groupId>
          <artifactId>pax-logging-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.ops4j.pax.logging</groupId>
          <artifactId>pax-logging-service</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.karaf</groupId>
          <artifactId>org.apache.karaf.client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.features</groupId>
      <artifactId>org.apache.karaf.features.command</artifactId>
      <version>${karaf-version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>fabric8-karaf</artifactId>
      <version>${project.version}</version>
      <type>xml</type>
      <classifier>features</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>fabric-api</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>fabric-core</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.ops4j.pax.url</groupId>
      <artifactId>pax-url-aether</artifactId>
      <!--version>${pax.url.version}</version-->
      <version>1.3.5</version>
      <scope>test</scope>
    </dependency>

    <!-- for spring-dm support -->
    <dependency>
      <groupId>org.apache.karaf.assemblies.features</groupId>
      <artifactId>standard</artifactId>
      <version>${karaf-version}</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>fabric-zookeeper</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- for JMS classes -->
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-pool</artifactId>
      <version>${activemq-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jms</artifactId>
      <version>${spring-version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!-- generate dependencies versions -->
        <groupId>org.apache.servicemix.tooling</groupId>
        <artifactId>depends-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-depends-file</id>
            <goals>
              <goal>generate-depends-file</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
