<?xml version="1.0" encoding="UTF-8"?><xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fusesource.org/fabric/bridge" elementFormDefault="qualified" version="1.0" targetNamespace="http://fusesource.org/fabric/bridge">

  <xs:element name="bridge-connector" type="tns:bridgeConnector"/>

  <xs:element name="broker-config" type="tns:brokerConfig"/>

  <xs:element name="destination" type="tns:bridgedDestination"/>

  <xs:element name="destinations-config" type="tns:bridgeDestinationsConfig"/>

  <xs:element name="dispatch-policy" type="tns:dispatchPolicy"/>

  <xs:element name="gateway-connector" type="tns:gatewayConnector"/>

  <xs:element name="remote-bridge" type="tns:remoteBridge"/>

  <xs:complexType name="bridgeConnector">
    <xs:complexContent>
      <xs:extension base="tns:abstract-connector">
        <xs:sequence>
          <xs:element name="local-broker" type="tns:brokerConfig"/>
          <xs:element name="remote-broker" type="tns:brokerConfig" minOccurs="0"/>
          <xs:element name="outbound-destinations" type="tns:bridgeDestinationsConfig" minOccurs="0"/>
          <xs:element name="inbound-destinations" type="tns:bridgeDestinationsConfig" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="outboundDestinationsRef" type="xs:string"/>
        <xs:attribute name="inboundDestinationsRef" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="abstract-connector" abstract="true">
    <xs:complexContent>
      <xs:extension base="tns:identifiedType">
        <xs:sequence/>
        <xs:attribute name="phase" type="xs:int"/>
        <xs:attribute name="autoStartup" type="xs:boolean"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="identifiedType" abstract="true">
    <xs:sequence/>
    <xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="brokerConfig">
    <xs:complexContent>
      <xs:extension base="tns:identifiedType">
        <xs:sequence>
          
        </xs:sequence>
        <xs:attribute name="brokerUrl" type="xs:string"/>
        <xs:attribute name="maxConnections" type="xs:int"/>
        <xs:attribute name="connectionFactoryRef" type="xs:string"/>
        <xs:attribute name="userName" type="xs:string"/>
        <xs:attribute name="password" type="xs:string"/>
        <xs:attribute name="clientId" type="xs:string"/>
        <xs:attribute name="destinationResolverRef" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="bridgeDestinationsConfig">
    <xs:complexContent>
      <xs:extension base="tns:identifiedType">
        <xs:sequence>
          <xs:element ref="tns:dispatch-policy" minOccurs="0"/>
          <xs:element ref="tns:destination" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="stagingQueueName" type="xs:string"/>
        <xs:attribute name="defaultStagingLocation" type="xs:boolean"/>
        <xs:attribute name="destinationNameHeader" type="xs:string"/>
        <xs:attribute name="destinationTypeHeader" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dispatchPolicy">
    <xs:complexContent>
      <xs:extension base="tns:identifiedType">
        <xs:sequence>
          
          
        </xs:sequence>
        <xs:attribute name="cacheLevel" type="xs:int"/>
        <xs:attribute name="concurrentConsumers" type="xs:int"/>
        <xs:attribute name="maxConcurrentConsumers" type="xs:int"/>
        <xs:attribute name="batchSize" type="xs:long"/>
        <xs:attribute name="batchTimeout" type="xs:long"/>
        <xs:attribute name="localAcknowledgeMode" type="xs:int"/>
        <xs:attribute name="localSessionTransacted" type="xs:boolean"/>
        <xs:attribute name="messageSelector" type="xs:string"/>
        <xs:attribute name="remoteAcknowledgeMode" type="xs:int"/>
        <xs:attribute name="remoteSessionTransacted" type="xs:boolean"/>
        <xs:attribute name="messageConverterRef" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="bridgedDestination">
    <xs:complexContent>
      <xs:extension base="tns:identifiedType">
        <xs:sequence>
          <xs:element ref="tns:dispatch-policy" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="pubSubDomain" type="xs:boolean"/>
        <xs:attribute name="durableSubscriptionName" type="xs:string"/>
        <xs:attribute name="subscriptionDurable" type="xs:boolean"/>
        <xs:attribute name="targetName" type="xs:string"/>
        <xs:attribute name="dispatchPolicyRef" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="gatewayConnector">
    <xs:complexContent>
      <xs:extension base="tns:abstract-connector">
        <xs:sequence>
          <xs:element name="local-broker" type="tns:brokerConfig"/>
          <xs:element name="inbound-destinations" type="tns:bridgeDestinationsConfig" minOccurs="0"/>
          <xs:element name="outbound-destinations" type="tns:bridgeDestinationsConfig" minOccurs="0"/>
          <xs:element ref="tns:remote-bridge" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="inboundDestinationsRef" type="xs:string"/>
        <xs:attribute name="outboundDestinationsRef" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="remoteBridge">
    <xs:complexContent>
      <xs:extension base="tns:identifiedType">
        <xs:sequence>
          <xs:element name="remote-broker" type="tns:brokerConfig" minOccurs="0"/>
          <xs:element name="inbound-destinations" type="tns:bridgeDestinationsConfig" minOccurs="0"/>
          <xs:element name="outbound-destinations" type="tns:bridgeDestinationsConfig" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="remoteBrokerRef" type="xs:string"/>
        <xs:attribute name="inboundDestinationsRef" type="xs:string"/>
        <xs:attribute name="outboundDestinationsRef" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>