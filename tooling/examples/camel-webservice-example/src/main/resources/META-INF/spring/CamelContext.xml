<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2014 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
  		   http://www.springframework.org/schema/beans/spring-beans.xsd
  		 http://camel.apache.org/schema/spring
		     http://camel.apache.org/schema/spring/camel-spring.xsd
		   http://camel.apache.org/schema/cxf
		     http://camel.apache.org/schema/cxf/camel-cxf.xsd">

  <cxf:cxfEndpoint id="WS"
                   address="http://0.0.0.0:9191/camel-example/WebService"
                   serviceClass="io.fabric8.example.CustomerService">
    <cxf:outInterceptors>
      <ref bean="loggingOutInterceptor"/>
    </cxf:outInterceptors>
    <cxf:inInterceptors>
      <ref bean="loggingInInterceptor"/>
    </cxf:inInterceptors>
  </cxf:cxfEndpoint>

  <bean id="loggingOutInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor"/>
  <bean id="loggingInInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor"/>

  <bean id="customerServiceBean" class="io.fabric8.example.camel.webservice.CustomerServiceBean"
        init-method="generateCustomer"/>

  <camelContext trace="false" xmlns="http://camel.apache.org/schema/spring">
    <route id="customers-webservice">
      <from uri="cxf:bean:WS"/>
      <choice>
        <when>
          <simple>${in.header.SOAPAction} contains 'getCustomerByName'</simple>
          <log message="&gt;&gt;&gt; We will search a Customer"/>
          <bean method="getCustomerByName" ref="customerServiceBean"/>
        </when>
        <when>
          <simple>${in.header.SOAPAction} contains 'saveCustomer'</simple>
          <log message="&gt;&gt;&gt; We will save a Customer"/>
          <bean method="saveCustomer" ref="customerServiceBean"/>
        </when>
        <when>
          <simple>${in.header.SOAPAction} contains 'getAllCustomers'</simple>
          <log message="&gt;&gt;&gt; We will get all Customers"/>
          <bean method="getCustomers" ref="customerServiceBean"/>
        </when>
      </choice>
    </route>

  </camelContext>

</beans>
